"use strict";(self.webpackChunkbluedot_docs=self.webpackChunkbluedot_docs||[]).push([[8677],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,v=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return n?o.createElement(v,i(i({ref:t},p),{},{components:n})):o.createElement(v,i({ref:t},p))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},52279:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={},i="Tempo",l={unversionedId:"Point SDK/React Native/Tempo",id:"Point SDK/React Native/Tempo",title:"Tempo",description:"Tempo allows active tracking of a user\u2019s location, as well as live ETA estimation.",source:"@site/docs/Point SDK/React Native/Tempo.md",sourceDirName:"Point SDK/React Native",slug:"/Point SDK/React Native/Tempo",permalink:"/Point SDK/React Native/Tempo",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Geo-triggering",permalink:"/Point SDK/React Native/Geo-triggering"},next:{title:"Features",permalink:"/Point SDK/React Native/Features"}},s={},c=[{value:"Start Tempo",id:"start-tempo",level:2},{value:"Receiving Tempo events",id:"receiving-tempo-events",level:2},{value:"Stop Tempo",id:"stop-tempo",level:2},{value:"Tempo Status",id:"tempo-status",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tempo"},"Tempo"),(0,r.kt)("p",null,"Tempo allows active tracking of a user\u2019s location, as well as live ETA estimation."),(0,r.kt)("h2",{id:"start-tempo"},"Start Tempo"),(0,r.kt)("p",null,"For this capability, the SDK needs to be initialized and the app must have location permission. You also need Tempo to be enabled for your Rezolve Account and can see the Tempo section in the Projects List page of your Canvas account. If that is not visible and you want to use this capability, please contact your Rezolve CX representative.\xa0"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"For Android a ",(0,r.kt)("a",{parentName:"strong",href:"/Point%20SDK/Android/Best%20Practices%20&%20Recommendations"},"foreground service notification")," is also required.")),(0,r.kt)("p",null,"Tempo also requires Destination IDs to be defined, which ",(0,r.kt)("a",{parentName:"p",href:"/Tempo/Create%20your%20destinations"},"you can learn about here"),"."),(0,r.kt)("p",null,"To start Tempo, you should use the ",(0,r.kt)("inlineCode",{parentName:"p"},"TempoBuilder")," \xa0class as below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { Button } from \'react-native\'\nimport BluedotPointSdk from \'bluedot-react-native\'\n\nexport default function App() {\n\xa0 // The SDK needs be initialized and the app must have location permissions.\n\n\xa0 const tempoService = new BluedotPointSdk.TempoBuilder()\n\xa0 function handleStartTempo() {\n\xa0 \xa0 tempoService\n\xa0 \xa0 \xa0 .androidNotification( // Required\n        "Notification channelId",\n          "Notification channel name",\n          "Notification title",\n          "Notification content",\n          1 // Notification ID - Optional\n\xa0 \xa0 \xa0 )\xa0\n\xa0 \xa0 \xa0 .start(\n\xa0 \xa0 \xa0 \xa0 "Destination ID",\n\xa0 \xa0 \xa0 \xa0 () => console.log("On Success Callback"),\n\xa0 \xa0 \xa0 \xa0 () => console.error("On Error Callback")\n\xa0 \xa0 \xa0 )\n\xa0 }\n\n\xa0 return <Button title="Start Tempo" onPress={handleStartTempo} />\n}\n')),(0,r.kt)("h2",{id:"receiving-tempo-events"},"Receiving Tempo events"),(0,r.kt)("p",null,"The Tempo service does not issue events under normal operation. Instead, it only issues events if there is an error with the operation. Tracking events are instead delivered via webhook, as configured in the Canvas UI."),(0,r.kt)("p",null,"Subscribe to receive the Tempo events. To do so use the method ",(0,r.kt)("inlineCode",{parentName:"p"},"on")," as below.\xa0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import React from 'react'\nimport BluedotPointSdk from 'bluedot-react-native'\n\nexport default function App() {\n\xa0 React.useEffect(() => {\n\xa0 \xa0 // Register to Tempo events\n\xa0 \xa0 BluedotPointSdk.on(\n'tempoTrackingDidExpire',\xa0\n() => console.log(\"On tempoTrackingDidExpire callback\")\n);\n\n\xa0 \xa0 BluedotPointSdk.on(\n'tempoTrackingStoppedWithError',\xa0\n() => console.log(\"On tempoTrackingStoppedWithError callback\")\n);\n\n\xa0 }, [])\n\n\xa0 // Then start the Tempo service.\n}\n")),(0,r.kt)("p",null,"To see the full list of supported events please refer to React Native Events List."),(0,r.kt)("h2",{id:"stop-tempo"},"Stop Tempo"),(0,r.kt)("p",null,"Once the Tempo service is no longer needed, you can stop the service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'BluedotPointSdk.stopTempo(\n\xa0 () => console.log("On success callback"),\n\xa0 () => console.error("On error callback")\n)\n')),(0,r.kt)("h2",{id:"tempo-status"},"Tempo Status"),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"isTempoRunning")," method to check the status of the Geo-triggering service. It will return a boolean value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'BluedotPointSdk.isTempoRunning()\n\xa0 .then(isRunning => console.log("Is the Tempo service running?", isRunning))\n\xa0 .catch(error => console.error("Error", error))\n')))}m.isMDXComponent=!0}}]);