"use strict";(self.webpackChunkbluedot_docs=self.webpackChunkbluedot_docs||[]).push([[6185],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||s;return r?n.createElement(g,o(o({ref:t},l),{},{components:r})):n.createElement(g,o({ref:t},l))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},38973:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const s={},o="Best practices",i={unversionedId:"APIs/Orders API/Best practices",id:"APIs/Orders API/Best practices",title:"Best practices",description:"Communication Design: Server-to-Server Integration",source:"@site/docs/APIs/Orders API/Best practices.md",sourceDirName:"APIs/Orders API",slug:"/APIs/Orders API/Best practices",permalink:"/APIs/Orders API/Best practices",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Using the Orders API",permalink:"/APIs/Orders API/Using the Orders API"},next:{title:"Analytics API User Guide",permalink:"/APIs/Analytics API/Overview"}},c={},p=[{value:"<strong>Communication Design: Server-to-Server Integration</strong>",id:"communication-design-server-to-server-integration",level:3},{value:"<strong>API Key Management</strong>",id:"api-key-management",level:3},{value:"<strong>Scoped API Keys</strong>",id:"scoped-api-keys",level:4}],l={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"best-practices"},"Best practices"),(0,a.kt)("h3",{id:"communication-design-server-to-server-integration"},(0,a.kt)("strong",{parentName:"h3"},"Communication Design: Server-to-Server Integration")),(0,a.kt)("p",null,"The Orders API is specifically designed for\xa0",(0,a.kt)("strong",{parentName:"p"},"server-to-server communication"),", offering a secure and efficient way to manage orders in Hello Screens. This ensures that sensitive data, such as API Keys and order details, are kept secure within your server environment."),(0,a.kt)("p",null,"If your use case involves direct communication between clients (e.g., mobile apps or browsers) and Hello Screens, we recommend using the existing\xa0",(0,a.kt)("a",{parentName:"p",href:"/APIs/Wave%20API/Overview"},(0,a.kt)("strong",{parentName:"a"},"Wave API")),". This API is tailored for client-facing integrations, ensuring security and optimised workflows in such scenarios."),(0,a.kt)("h3",{id:"api-key-management"},(0,a.kt)("strong",{parentName:"h3"},"API Key Management")),(0,a.kt)("p",null,"This section highlights best practices and specific capabilities around API Key usage for secure and efficient access."),(0,a.kt)("h4",{id:"scoped-api-keys"},(0,a.kt)("strong",{parentName:"h4"},"Scoped API Keys")),(0,a.kt)("p",null,"To improve security and control, API Keys can be scoped to specific projects. This ensures that a key only has access to the data it\u2019s intended for, reducing the impact of key exposure."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Recommendations:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Generate Separate Keys for Each Project:"),"\xa0Use individual API Keys for different integrations or applications."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Restrict Permissions:"),"\xa0Assign keys to only the endpoints or resources required by your project."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Monitor Usage Per Key:"),"\xa0Track usage and revoke keys if they are no longer needed.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:"),"\xa0If you manage two projects\u2014",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Project A")),"\xa0and\xa0",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Project B")),"\u2014generate separate API Keys for each project and ensure they only access their respective data."),(0,a.kt)("hr",null))}d.isMDXComponent=!0}}]);