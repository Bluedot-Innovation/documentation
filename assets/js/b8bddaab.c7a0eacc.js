"use strict";(self.webpackChunkbluedot_docs=self.webpackChunkbluedot_docs||[]).push([[7060],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function g(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=g(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,m=u["".concat(c,".").concat(d)]||u[d]||p[d]||i;return n?r.createElement(m,a(a({ref:t},s),{},{components:n})):r.createElement(m,a({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var g={};for(var c in t)hasOwnProperty.call(t,c)&&(g[c]=t[c]);g.originalType=e,g[u]="string"==typeof e?e:o,a[1]=g;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1064:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>g,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const i={},a="Geo-triggering",g={unversionedId:"Point SDK/React Native/Geo-triggering",id:"Point SDK/React Native/Geo-triggering",title:"Geo-triggering",description:"Geo-triggering allows the automatic detection of location context change events (such as entering or exiting a geofence, or crossing a Geoline\u2122). For this capability, the SDK needs to be initialized and the app must have location permission.",source:"@site/docs/Point SDK/React Native/Geo-triggering.md",sourceDirName:"Point SDK/React Native",slug:"/Point SDK/React Native/Geo-triggering",permalink:"/Point SDK/React Native/Geo-triggering",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Quick Start",permalink:"/Point SDK/React Native/Quick Start"},next:{title:"Tempo",permalink:"/Point SDK/React Native/Tempo"}},c={},l=[{value:"Start Geo-triggering",id:"start-geo-triggering",level:2},{value:"Receiving Geo-trigger events",id:"receiving-geo-trigger-events",level:2},{value:"Stop Geo-triggering",id:"stop-geo-triggering",level:2},{value:"Geo-triggering Status",id:"geo-triggering-status",level:2}],s={toc:l},u="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"geo-triggering"},"Geo-triggering"),(0,o.kt)("p",null,"Geo-triggering allows the automatic detection of location context change events (such as entering or exiting a geofence, or crossing a Geoline\u2122). For this capability, the SDK needs to be initialized and the app must have location permission."),(0,o.kt)("h2",{id:"start-geo-triggering"},"Start Geo-triggering"),(0,o.kt)("p",null,"To start geo-triggering, you should use the ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoTriggeringBuilder")," \xa0as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { Button } from \'react-native\'\nimport BluedotPointSdk from \'bluedot-react-native\'\n\nexport default function App() {\n\xa0 // The SDK needs be initialized and the app must have location permissions.\n\n\xa0 const geoTriggeringService = new BluedotPointSdk.GeoTriggeringBuilder()\n\xa0 function handleStartGeoTriggering() {\n\xa0 \xa0 geoTriggeringService.start(\n\xa0 \xa0 \xa0 () => console.log("On Success Callback"),\n\xa0 \xa0 \xa0 () => console.error("On Error Callback"),\n\xa0 \xa0 )\n\xa0 }\n\n\xa0 return <Button title="Start Geo-Triggering" onPress={handleStartGeoTriggering} />\n}\n')),(0,o.kt)("h2",{id:"receiving-geo-trigger-events"},"Receiving Geo-trigger events"),(0,o.kt)("p",null,"Subscribe to receive Geo-triggering events. To do so use the method ",(0,o.kt)("inlineCode",{parentName:"p"},"on")," as below.\xa0"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"As Entry events may occur immediately upon staring Geo-triggering, it is recommended ed to subscribe to the events before starting the Geo-triggering service.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import React from 'react'\nimport BluedotPointSdk from 'bluedot-react-native'\n\nexport default function App() {\n\xa0 React.useEffect(() => {\n\xa0 \xa0 // Register to Geo-triggering events\n\xa0 \xa0 BluedotPointSdk.on('enterZone', () => console.log(\"On enterZone callback\"));\n\xa0 \xa0 BluedotPointSdk.on('exitZone', () => console.log(\"On exitZone callback\"));\n\xa0 }, [])\n\n\xa0 // Then start the Geo-triggering service.\n}\n")),(0,o.kt)("h2",{id:"stop-geo-triggering"},"Stop Geo-triggering"),(0,o.kt)("p",null,"If you only need geo-triggering for a limited period, once that period is over, you can stop the geo-trigger service."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'BluedotPointSdk.stopGeoTriggering(\n\xa0 () => console.log("On success callback"),\n\xa0 () => console.error("On error callback")\n)\n')),(0,o.kt)("h2",{id:"geo-triggering-status"},"Geo-triggering Status"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"isGeoTriggeringRunning")," method to check the status of the Geo-triggering service. It will return a boolean value."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'BluedotPointSdk.isGeoTriggeringRunning()\n\xa0 .then(isRunning => console.log("Is the Geo-triggering service running?", isRunning))\n\xa0 .catch(error => console.error("Error", error))\n')))}p.isMDXComponent=!0}}]);